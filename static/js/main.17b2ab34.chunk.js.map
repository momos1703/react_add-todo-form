{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todoInfo","classNames","completed","title","TodoList","visibleTodos","map","todo","initialTodo","userId","findUser","users","filter","setId","todoList","Math","max","todoListWithUsers","App","useState","formCounter","setFormCounter","setTodoList","newTodo","setNewTodo","titleError","userError","hasFormError","setHasFormError","action","method","onSubmit","event","preventDefault","trim","length","checkedTodo","currentError","currentTodosList","count","htmlFor","type","placeholder","value","onChange","target","currentErrors","currentTodo","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17b2ab34.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todoInfo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todoInfo }) => {\n  return (\n    <article\n      data-id={todoInfo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todoInfo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todoInfo.title}\n      </h2>\n\n      <UserInfo\n        user={todoInfo.user}\n      />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  visibleTodos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos }) => {\n  return (\n    <section className=\"TodoList\">\n      {visibleTodos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todoInfo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport users from './api/users';\nimport todos from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst initialUser: User = {\n  id: 0,\n  name: '',\n  username: '',\n  email: '',\n};\nconst initialTodo: Todo = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n  user: initialUser,\n};\nconst findUser = (id: number): User => (\n  users.filter(user => user.id === id)[0]\n);\nconst setId = (todoList: Todo[]) => {\n  const id = Math.max(\n    ...todoList.map(todo => todo.id),\n  );\n\n  return id + 1;\n};\n\nconst todoListWithUsers = todos.map(todo => (\n  {\n    ...todo,\n    user: findUser(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [formCounter, setFormCounter] = useState(0);\n  const [todoList, setTodoList] = useState<Todo[]>(todoListWithUsers);\n  const [newTodo, setNewTodo] = useState<Todo>(initialTodo);\n  const [hasFormError, setHasFormError] = useState({\n    titleError: '',\n    userError: '',\n  });\n\n  const checkForErrors = (checkedTodo: Todo) => {\n    if (checkedTodo.title.trim().length === 0) {\n      setHasFormError(currentError => ({\n        ...currentError,\n        titleError: 'Please enter a title',\n      }));\n    }\n\n    if (checkedTodo.userId === 0) {\n      setHasFormError(currentError => ({\n        ...currentError,\n        userError: 'Please choose a user',\n      }));\n    }\n  };\n\n  const resetFields = () => {\n    setNewTodo(initialTodo);\n    setHasFormError({\n      titleError: '',\n      userError: '',\n    });\n    setFormCounter(count => count + 1);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const user = findUser(+event.target.value);\n\n    if (user) {\n      setHasFormError((currentErrors) => ({\n        ...currentErrors,\n        userError: '',\n      }));\n    }\n\n    setNewTodo((currentTodo) => ({\n      ...currentTodo,\n      id: setId(todoList),\n      userId: user.id,\n      user,\n    }));\n  };\n\n  const handleTodoTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.trim().length === 0) {\n      setHasFormError((currentErrors) => ({\n        ...currentErrors,\n        titleError: '',\n      }));\n    }\n\n    setNewTodo(currentTodo => ({\n      ...currentTodo,\n      title: event.target.value,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (newTodo.id === 0 || newTodo.title.trim().length === 0) {\n      checkForErrors(newTodo);\n\n      return;\n    }\n\n    setTodoList(currentTodosList => (\n      [...currentTodosList,\n        newTodo,\n      ]\n    ));\n\n    resetFields();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        key={formCounter}\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title-field\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title-field\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Please enter a title\"\n            value={newTodo.title}\n            onChange={handleTodoTitle}\n          />\n          <span className=\"error\">\n            {hasFormError.titleError}\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user-field\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user-field\"\n            value={newTodo.userId}\n            onChange={handleUserId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(({ id, name }) => (\n              <option\n                value={id}\n                key={id}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n\n          <span className=\"error\">\n            {hasFormError.userError}\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        visibleTodos={todoList}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}